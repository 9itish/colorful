var Colorful=function(){"use strict";class t{#t;#e;#r;#a;constructor(e){e=e.trim();const r=/^rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(0|1|0?\.\d+)\s*)?\)$/,a=/^(hsla?|hsva?)\(\s*(\d{1,3})\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*(?:,\s*(0|1|0?\.\d+)\s*)?\)$/;if(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3}|[A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/.test(e))this.#t=t.sanitizeHex(e),this.#e=t.hexToRgb(this.#t),this.#r=t.rgbToHsl(this.#e),this.#a=t.hslToHsv(this.#r);else if(r.test(e)){const a=e.match(r);if(!a)throw new Error("Invalid color format");{const t=Number(a[1]),e=Number(a[2]),r=Number(a[3]),s=a[4]?Number(a[4]):1;this.#e=[t,e,r,s]}this.#t=t.rgbToHex(this.#e),this.#r=t.rgbToHsl(this.#e)}else{if(!a.test(e))throw new Error("You are either using an unsupported color format or providing an invalid value. Colorful.js supports ");if(e.includes("hsl")){const r=e.match(a);if(!r)throw new Error("Invalid color format");{const t=Number(r[2]),e=Number(r[3]),a=Number(r[4]),s=r[5]?Number(r[5]):1;this.#r=[t,e,a,s]}this.#e=t.hslToRgb(this.#r),this.#a=t.hslToHsv(this.#r),this.#t=t.rgbToHex(this.#e)}else{const r=e.match(a);if(!r)throw new Error("Invalid color format");{const t=Number(r[2]),e=Number(r[3]),a=Number(r[4]),s=r[5]?Number(r[5]):1;this.#a=[t,e,a,s]}this.#e=t.hsvToRgb(this.#a),this.#r=t.rgbToHsl(this.#e),this.#t=t.rgbToHex(this.#e)}}}static sanitizeHex(t){if("#"!==(t=t.trim())[0])throw new Error(`Add a '#' at the beginning of ${t}!`);if(!/^#[a-f0-9]+/i.test(t))throw new Error(`The input HEX Color ${t} contains invalid character combination!`);let e=t.replace("#","");if(3!==e.length&&4!==e.length&&6!==e.length&&8!==e.length)throw new Error(`${e} doesn't have the right number of characters!`);return 3!==e.length&&4!==e.length||(e=e.split("").map((t=>t+t)).join("")),`#${e}`}static hexToRgb(e){6==(e=t.sanitizeHex(e).replace("#","")).length&&(e+="FF");let r=parseInt(e.slice(0,2),16),a=parseInt(e.slice(2,4),16),s=parseInt(e.slice(4,6),16),o=parseFloat((parseInt(e.slice(6,8),16)/255).toFixed(4));return 1==o?[r,a,s]:[r,a,s,o]}static rgbToHsl(t){let[e,a,s,o=1]=t;r(t),e/=255,a/=255,s/=255;let n,h,i=Math.max(e,a,s),g=Math.min(e,a,s),l=(i+g)/2;if(i===g)n=h=0;else{let t=i-g;switch(h=l>.5?t/(2-i-g):t/(i+g),i){case e:n=(a-s)/t+(a<s?6:0);break;case a:n=(s-e)/t+2;break;case s:n=(e-a)/t+4}n/=6}return 1!==o?[Math.round(360*n),Math.round(100*h),Math.round(100*l),o]:[Math.round(360*n),Math.round(100*h),Math.round(100*l)]}static hslToHsv(t){a(t);let[e,r,s,o=1]=t;r/=100,s/=100;let n=s+r*Math.min(s,1-s),h=0===n?0:2*(1-s/n);return 1!==o?[e,Math.round(100*h),Math.round(100*n),o]:[e,Math.round(100*h),Math.round(100*n)]}static hslToRgb(t){a(t);let e,r,s,[o,n,h,i=1]=t;if(o/=360,n/=100,h/=100,0===n)e=r=s=h;else{const t=(t,e,r)=>(r<0&&(r+=1),r>1&&(r-=1),r<1/6?t+6*(e-t)*r:r<.5?e:r<2/3?t+(e-t)*(2/3-r)*6:t);let a=h<.5?h*(1+n):h+n-h*n,i=2*h-a;e=t(i,a,o+1/3),r=t(i,a,o),s=t(i,a,o-1/3)}return 1!==i?[Math.round(255*e),Math.round(255*r),Math.round(255*s),i]:[Math.round(255*e),Math.round(255*r),Math.round(255*s)]}static hsvToRgb(t){a(t);let[e,r,s,o]=t;r/=100,s/=100;let n,h=s*r,i=h*(1-Math.abs(e/60%2-1)),g=s-h;e>=0&&e<60?n=[h,i,0]:e>=60&&e<120?n=[i,h,0]:e>=120&&e<180?n=[0,h,i]:e>=180&&e<240?n=[0,i,h]:e>=240&&e<300?n=[i,0,h]:e>=300&&e<360&&(n=[h,0,i]);let[l,u,b]=n.map((t=>Math.round(255*(t+g))));return 1!==o?[l,u,b,o]:[l,u,b]}static rgbToHex(t){r(t);let[e,a,s,o=1]=t;return o=1!=o?Math.round(255*o).toString(16).padStart(2,"0"):"","#"+[e,a,s].map((t=>t.toString(16).padStart(2,"0"))).join("")+o}static rgbStringToHex(e){let a=/^rgb\(\s*(\d+),\s*(\d+),\s*(\d+)\s*\)$/.exec(e);if(!a)throw new Error("Invalid RGB string format");return a=a.slice(1).map((t=>parseInt(t,10))),r(a),t.rgbToHex(a)}adjustBrightness(e){if(e=e.toString().trim(),isNaN(Number(e))||""==e)throw new Error("Please pass a numerical value!");let[r,a,s,o=1]=this.#r;s+=e*s/100,s=Math.max(0,Math.min(s,100));let n=t.hslToRgb([r,a,s,o]);return t.rgbToHex(n)}adjustSaturation(e){if(isNaN(Number(e)))throw new Error("Please pass a numerical value!");let[r,a,s,o=1]=this.#r;a+=e*a/100,a=Math.max(0,Math.min(a,100));let n=t.hslToRgb([r,a,s,o]);return t.rgbToHex(n)}rotateHue(e){if(isNaN(Number(e)))throw new Error("Please pass a numerical value!");let[r,a,s,o=1]=this.#r;r=(r+e)%360,r<0&&(r+=360);let n=t.hslToRgb([r,a,s,o]);return t.rgbToHex(n)}static getLuminance(e){e=t.sanitizeHex(e);let r=t.hexToRgb(e),[a,s,o]=r.map((t=>(t/=255)<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4)));return.2126*a+.7152*s+.0722*o}static getWhiteAccessibleColor(){let e=t.getRandomHexColor();for(;this.getLuminance(e)>=.18;)e=t.getRandomHexColor();return e}static getBlackAccessibleColor(){let e=t.getRandomHexColor();for(;this.getLuminance(e)<=.4;)e=t.getRandomHexColor();return e}isLight(){return t.getLuminance(this.#t)>=.5}isDark(){return t.getLuminance(this.#t)<.5}getContrast(e){let r=t.getLuminance(this.#t),a=t.getLuminance(e);return((Math.max(r,a)+.05)/(Math.min(r,a)+.05)).toFixed(2)}getContrastingColor(e){let r=t.getRandomHexColor();for(;this.getContrast(r)<e;)r=t.getRandomHexColor();return r}getComplementaryColor(){let[e,r,a,s=1]=this.#r;e=(e+180)%360;const o=t.hslToRgb([e,r,a,s]);return t.rgbToHex(o)}getInverseColor(){let[e,r,a,s=1]=this.#e;return t.rgbToHex([255-e,255-r,255-a,s])}getMonochromaticColors(){let[e,r,a,s=1]=this.#a;let o=Array.from({length:6},((t,e)=>Math.min(100,Math.max(0,a+15*(e-Math.floor(3))))));const n=[...o].sort(((t,e)=>Math.abs(t-a)-Math.abs(e-a))),h=n[0],i=n[n.length-1];o=Math.abs(h-a)<4?o.filter((t=>t!==h)):o.filter((t=>t!==i));let g=[];for(let a of o){let o=t.hslToRgb([e,r,a,s]),n=t.hsvToRgb([e,r,a,s]),h=[Math.round(.6*o[0]+.4*n[0]),Math.round(.6*o[1]+.4*n[1]),Math.round(.6*o[2]+.4*n[2]),s];g.push(h)}return g.map((e=>t.rgbToHex(e)))}getSplitComplementaryColors(){let[e,r,a,s=1]=this.#r,o=(e+150)%360,n=(e+210)%360;const h=t.hslToRgb([o,r,a,s]),i=t.hslToRgb([n,r,a,s]);return[t.rgbToHex(h),t.rgbToHex(i)]}getAnalogousColors(){let[e,r,a,s=1]=this.#r,o=(e+30)%360,n=(e+330)%360;const h=t.hslToRgb([o,r,a,s]),i=t.hslToRgb([n,r,a,s]);return[t.rgbToHex(h),t.rgbToHex(i)]}getTriadColors(){let[e,r,a,s=1]=this.#r,o=(e+120)%360,n=(e+240)%360;const h=t.hslToRgb([o,r,a,s]),i=t.hslToRgb([n,r,a,s]);return[t.rgbToHex(h),t.rgbToHex(i)]}getSquareColors(){let[e,r,a,s=1]=this.#r,o=(e+90)%360,n=(e+180)%360,h=(e+270)%360;const i=t.hslToRgb([o,r,a,s]),g=t.hslToRgb([n,r,a,s]),l=t.hslToRgb([h,r,a,s]);return[t.rgbToHex(i),t.rgbToHex(g),t.rgbToHex(l)]}getRectangleColors(){let[e,r,a,s=1]=this.#r,o=(e+60)%360,n=(e+180)%360,h=(e+240)%360;const i=t.hslToRgb([o,r,a,s]),g=t.hslToRgb([n,r,a,s]),l=t.hslToRgb([h,r,a,s]);return[t.rgbToHex(i),t.rgbToHex(g),t.rgbToHex(l)]}static getRandomHexColor(){let t=Math.floor(255*Math.random()),e=Math.floor(255*Math.random()),r=Math.floor(255*Math.random());return`#${t.toString(16).padStart(2,"0")}${e.toString(16).padStart(2,"0")}${r.toString(16).padStart(2,"0")}`}static getRandomPastelColor(){const t=Math.floor(127*Math.random()+128),e=Math.floor(127*Math.random()+128),r=Math.floor(127*Math.random()+128);return`#${t.toString(16)}${e.toString(16)}${r.toString(16)}`}static getRandomPreferredColor(e={}){const r={reddish:{hueRange:[0,15],saturationRange:[60,100],lightnessRange:[40,80]},pinkish:{hueRange:[320,340],saturationRange:[60,100],lightnessRange:[40,80]},greenish:{hueRange:[90,130],saturationRange:[60,100],lightnessRange:[30,70]},bluish:{hueRange:[210,240],saturationRange:[60,100],lightnessRange:[60,80]},purplish:{hueRange:[260,280],saturationRange:[60,100],lightnessRange:[60,80]},warm:{hueRange:[0,50],saturationRange:[70,100],lightnessRange:[40,60]},cool:{hueRange:[180,240],saturationRange:[70,100],lightnessRange:[40,60]},saturated:{saturationRange:[90,100],lightnessRange:[50,50]},dull:{saturationRange:[10,30],lightnessRange:[50,50]}};let{hueRange:a=[0,360],saturationRange:s=[0,100],lightnessRange:o=[0,100]}=e;function n(t,e){return Math.floor(Math.random()*(e-t+1))+t}"string"==typeof e&&r[e]&&(r[e].hueRange&&(a=r[e].hueRange),r[e].saturationRange&&(s=r[e].saturationRange),r[e].lightnessRange&&(o=r[e].lightnessRange));const h=n(a[0],a[1]),i=n(s[0],s[1]),g=n(o[0],o[1]);let l=t.hslToRgb([h,i,g]);return t.rgbToHex(l)}get hex(){return this.#t}set hex(e){this.#t=t.sanitizeHex(e),this.#e=t.hexToRgb(this.#t),this.#r=t.rgbToHsl(this.#e),this.#a=t.hslToHsv(this.#r)}get rgb(){return this.#e}get rgbString(){return"rgb("+this.#e.join(", ")+")"}get hsl(){return this.#r}get hslString(){let t=this.#r;return`hsl(${t[0]}deg, ${t[1]}%, ${t[2]}%)`}get hsv(){return this.#a}get hsvString(){let t=this.#a;return`hsv(${t[0]}deg, ${t[1]}%, ${t[2]}%)`}get red(){return this.#e[0]}get green(){return this.#e[1]}get blue(){return this.#e[2]}get hue(){return this.#r[0]}get saturation(){return this.#r[1]}get lightness(){return this.#r[2]}get luminance(){return t.getLuminance(this.hex)}get splitComplementary(){return this.getSplitComplementaryColors()}get complementary(){return this.getComplementaryColor()}get inverse(){return this.getInverseColor()}static get aHex(){return t.getRandomHexColor()}static get aPastel(){return t.getRandomPastelColor()}static get reddish(){return t.getRandomPreferredColor("reddish")}static get bluish(){return t.getRandomPreferredColor("bluish")}static get greenish(){return t.getRandomPreferredColor("greenish")}get analogous(){return this.getAnalogousColors()}get monochromatic(){return this.getMonochromaticColors()}get triad(){return this.getTriadColors()}get square(){return this.getSquareColors()}get rectangle(){return this.getRectangleColors()}}function e(t,e,r){return t>=e&&t<=r}function r(t){if(3!=t.length&&4!=t.length)throw new Error("Input array needs 3 or 4 elements!");let r=0;for(let a of t){if(r<3){if(!Number.isInteger(a))throw new Error("At least one RGB value is not a number!");if(!e(a,0,255))throw new Error("At least one RGB value is not in valid range!")}else{if(isNaN(Number(a)))throw new Error(`The alpha value ${a} is not a number!`);if(!e(a,0,1))throw new Error("The alpha value is out of range!")}r+=1}}function a(t){if(3!=t.length&&4!=t.length)throw new Error("Input array needs 3 or 4 elements!");if(!e(t[0],0,359))throw new Error("Hue is out of range!");if(!e(t[1],0,100))throw new Error("Saturation is out of range!");if(!e(t[2],0,100))throw new Error("Lightness is out of range!");if(4==t.length&&!e(t[3],0,1))throw new Error("The HSL opacity is out of range!")}return t}();
