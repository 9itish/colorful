var Colorful=function(t){"use strict";class e{#t;#e;#r;#a;constructor(t){t=t.trim();const r=/^rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(0|1|0?\.\d+)\s*)?\)$/,a=/^(hsla?|hsva?)\(\s*(\d{1,3})\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*(?:,\s*(0|1|0?\.\d+)\s*)?\)$/;if(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3}|[A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/.test(t))this.#t=e.sanitizeHex(t),this.#e=e.hexToRgb(this.#t),this.#r=e.rgbToHsl(this.#e),this.#a=e.hslToHsv(this.#r);else if(r.test(t)){const a=t.match(r);if(!a)throw new Error("Invalid color format");{const t=Number(a[1]),e=Number(a[2]),r=Number(a[3]),s=a[4]?Number(a[4]):1;this.#e=[t,e,r,s]}this.#t=e.rgbToHex(this.#e),this.#r=e.rgbToHsl(this.#e)}else{if(!a.test(t))throw new Error("You are either using an unsupported color format or providing an invalid value. Colorful.js supports ");if(t.includes("hsl")){const r=t.match(a);if(!r)throw new Error("Invalid color format");{const t=Number(r[2]),e=Number(r[3]),a=Number(r[4]),s=r[5]?Number(r[5]):1;this.#r=[t,e,a,s]}this.#e=e.hslToRgb(this.#r),this.#a=e.hslToHsv(this.#r),this.#t=e.rgbToHex(this.#e)}else{const r=t.match(a);if(!r)throw new Error("Invalid color format");{const t=Number(r[2]),e=Number(r[3]),a=Number(r[4]),s=r[5]?Number(r[5]):1;this.#a=[t,e,a,s]}this.#e=e.hsvToRgb(this.#a),this.#r=e.rgbToHsl(this.#e),this.#t=e.rgbToHex(this.#e)}}}static sanitizeHex(t){if("#"!==(t=t.trim())[0])throw new Error(`Add a '#' at the beginning of ${t}!`);if(!/^#[a-f0-9]+/i.test(t))throw new Error(`The input HEX Color ${t} contains invalid character combination!`);let e=t.replace("#","");if(3!==e.length&&4!==e.length&&6!==e.length&&8!==e.length)throw new Error(`${e} doesn't have the right number of characters!`);return 3!==e.length&&4!==e.length||(e=e.split("").map((t=>t+t)).join("")),`#${e}`}static hexToRgb(t){6==(t=e.sanitizeHex(t).replace("#","")).length&&(t+="FF");let r=parseInt(t.slice(0,2),16),a=parseInt(t.slice(2,4),16),s=parseInt(t.slice(4,6),16),o=parseFloat((parseInt(t.slice(6,8),16)/255).toFixed(4));return 1==o?[r,a,s]:[r,a,s,o]}static rgbToHsl(t){let[e,r,s,o=1]=t;a(t),e/=255,r/=255,s/=255;let n,h,i=Math.max(e,r,s),l=Math.min(e,r,s),g=(i+l)/2;if(i===l)n=h=0;else{let t=i-l;switch(h=g>.5?t/(2-i-l):t/(i+l),i){case e:n=(r-s)/t+(r<s?6:0);break;case r:n=(s-e)/t+2;break;case s:n=(e-r)/t+4}n/=6}return 1!==o?[Math.round(360*n),Math.round(100*h),Math.round(100*g),o]:[Math.round(360*n),Math.round(100*h),Math.round(100*g)]}static hslToHsv(t){s(t);let[e,r,a,o=1]=t;r/=100,a/=100;let n=a+r*Math.min(a,1-a),h=0===n?0:2*(1-a/n);return 1!==o?[e,Math.round(100*h),Math.round(100*n),o]:[e,Math.round(100*h),Math.round(100*n)]}static hslToRgb(t){s(t);let e,r,a,[o,n,h,i=1]=t;if(o/=360,n/=100,h/=100,0===n)e=r=a=h;else{const t=(t,e,r)=>(r<0&&(r+=1),r>1&&(r-=1),r<1/6?t+6*(e-t)*r:r<.5?e:r<2/3?t+(e-t)*(2/3-r)*6:t);let s=h<.5?h*(1+n):h+n-h*n,i=2*h-s;e=t(i,s,o+1/3),r=t(i,s,o),a=t(i,s,o-1/3)}return 1!==i?[Math.round(255*e),Math.round(255*r),Math.round(255*a),i]:[Math.round(255*e),Math.round(255*r),Math.round(255*a)]}static hsvToRgb(t){s(t);let[e,r,a,o]=t;r/=100,a/=100;let n,h=a*r,i=h*(1-Math.abs(e/60%2-1)),l=a-h;e>=0&&e<60?n=[h,i,0]:e>=60&&e<120?n=[i,h,0]:e>=120&&e<180?n=[0,h,i]:e>=180&&e<240?n=[0,i,h]:e>=240&&e<300?n=[i,0,h]:e>=300&&e<360&&(n=[h,0,i]);let[g,u,b]=n.map((t=>Math.round(255*(t+l))));return 1!==o?[g,u,b,o]:[g,u,b]}static rgbToHex(t){a(t);let[e,r,s,o=1]=t;return o=1!=o?Math.round(255*o).toString(16).padStart(2,"0"):"","#"+[e,r,s].map((t=>t.toString(16).padStart(2,"0"))).join("")+o}static rgbStringToHex(t){let r=/^rgb\(\s*(\d+),\s*(\d+),\s*(\d+)\s*\)$/.exec(t);if(!r)throw new Error("Invalid RGB string format");return r=r.slice(1).map((t=>parseInt(t,10))),a(r),e.rgbToHex(r)}adjustBrightness(t){if(t=t.toString().trim(),isNaN(Number(t))||""==t)throw new Error("Please pass a numerical value!");let[r,a,s,o=1]=this.#r;s+=t*s/100,s=Math.max(0,Math.min(s,100));let n=e.hslToRgb([r,a,s,o]);return e.rgbToHex(n)}adjustSaturation(t){if(isNaN(Number(t)))throw new Error("Please pass a numerical value!");let[r,a,s,o=1]=this.#r;a+=t*a/100,a=Math.max(0,Math.min(a,100));let n=e.hslToRgb([r,a,s,o]);return e.rgbToHex(n)}rotateHue(t){if(isNaN(Number(t)))throw new Error("Please pass a numerical value!");let[r,a,s,o=1]=this.#r;r=(r+t)%360,r<0&&(r+=360);let n=e.hslToRgb([r,a,s,o]);return e.rgbToHex(n)}static getLuminance(t){t=e.sanitizeHex(t);let r=e.hexToRgb(t),[a,s,o]=r.map((t=>(t/=255)<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4)));return.2126*a+.7152*s+.0722*o}static getWhiteAccessibleColor(){let t=e.getRandomHexColor();for(;this.getLuminance(t)>=.18;)t=e.getRandomHexColor();return t}static getBlackAccessibleColor(){let t=e.getRandomHexColor();for(;this.getLuminance(t)<=.4;)t=e.getRandomHexColor();return t}isLight(){return e.getLuminance(this.#t)>=.5}isDark(){return e.getLuminance(this.#t)<.5}getContrast(t){let r=e.getLuminance(this.#t),a=e.getLuminance(t);return((Math.max(r,a)+.05)/(Math.min(r,a)+.05)).toFixed(2)}getContrastingColor(t){let r=e.getRandomHexColor();for(;this.getContrast(r)<t;)r=e.getRandomHexColor();return r}getComplementaryColor(){let[t,r,a,s=1]=this.#r;t=(t+180)%360;const o=e.hslToRgb([t,r,a,s]);return e.rgbToHex(o)}getInverseColor(){let[t,r,a,s=1]=this.#e;return e.rgbToHex([255-t,255-r,255-a,s])}getMonochromaticColors(){let[t,r,a,s=1]=this.#a;let o=Array.from({length:6},((t,e)=>Math.min(100,Math.max(0,a+15*(e-Math.floor(3))))));const n=[...o].sort(((t,e)=>Math.abs(t-a)-Math.abs(e-a))),h=n[0],i=n[n.length-1];o=Math.abs(h-a)<4?o.filter((t=>t!==h)):o.filter((t=>t!==i));let l=[];for(let a of o){let o=e.hslToRgb([t,r,a,s]),n=e.hsvToRgb([t,r,a,s]),h=[Math.round(.6*o[0]+.4*n[0]),Math.round(.6*o[1]+.4*n[1]),Math.round(.6*o[2]+.4*n[2]),s];l.push(h)}return l.map((t=>e.rgbToHex(t)))}getSplitComplementaryColors(){let[t,r,a,s=1]=this.#r,o=(t+150)%360,n=(t+210)%360;const h=e.hslToRgb([o,r,a,s]),i=e.hslToRgb([n,r,a,s]);return[e.rgbToHex(h),e.rgbToHex(i)]}getAnalogousColors(){let[t,r,a,s=1]=this.#r,o=(t+30)%360,n=(t+330)%360;const h=e.hslToRgb([o,r,a,s]),i=e.hslToRgb([n,r,a,s]);return[e.rgbToHex(h),e.rgbToHex(i)]}getTriadColors(){let[t,r,a,s=1]=this.#r,o=(t+120)%360,n=(t+240)%360;const h=e.hslToRgb([o,r,a,s]),i=e.hslToRgb([n,r,a,s]);return[e.rgbToHex(h),e.rgbToHex(i)]}getSquareColors(){let[t,r,a,s=1]=this.#r,o=(t+90)%360,n=(t+180)%360,h=(t+270)%360;const i=e.hslToRgb([o,r,a,s]),l=e.hslToRgb([n,r,a,s]),g=e.hslToRgb([h,r,a,s]);return[e.rgbToHex(i),e.rgbToHex(l),e.rgbToHex(g)]}getRectangleColors(){let[t,r,a,s=1]=this.#r,o=(t+60)%360,n=(t+180)%360,h=(t+240)%360;const i=e.hslToRgb([o,r,a,s]),l=e.hslToRgb([n,r,a,s]),g=e.hslToRgb([h,r,a,s]);return[e.rgbToHex(i),e.rgbToHex(l),e.rgbToHex(g)]}static getRandomHexColor(){let t=Math.floor(255*Math.random()),e=Math.floor(255*Math.random()),r=Math.floor(255*Math.random());return`#${t.toString(16).padStart(2,"0")}${e.toString(16).padStart(2,"0")}${r.toString(16).padStart(2,"0")}`}static getRandomPastelColor(){const t=Math.floor(127*Math.random()+128),e=Math.floor(127*Math.random()+128),r=Math.floor(127*Math.random()+128);return`#${t.toString(16)}${e.toString(16)}${r.toString(16)}`}static getRandomPreferredColor(t={}){const r={reddish:{hueRange:[0,15],saturationRange:[60,100],lightnessRange:[40,80]},pinkish:{hueRange:[320,340],saturationRange:[60,100],lightnessRange:[40,80]},greenish:{hueRange:[90,130],saturationRange:[60,100],lightnessRange:[30,70]},bluish:{hueRange:[210,240],saturationRange:[60,100],lightnessRange:[60,80]},purplish:{hueRange:[260,280],saturationRange:[60,100],lightnessRange:[60,80]},warm:{hueRange:[0,50],saturationRange:[70,100],lightnessRange:[40,60]},cool:{hueRange:[180,240],saturationRange:[70,100],lightnessRange:[40,60]},saturated:{saturationRange:[90,100],lightnessRange:[50,50]},dull:{saturationRange:[10,30],lightnessRange:[50,50]}};let{hueRange:a=[0,360],saturationRange:s=[0,100],lightnessRange:o=[0,100]}=t;function n(t,e){return Math.floor(Math.random()*(e-t+1))+t}"string"==typeof t&&r[t]&&(r[t].hueRange&&(a=r[t].hueRange),r[t].saturationRange&&(s=r[t].saturationRange),r[t].lightnessRange&&(o=r[t].lightnessRange));const h=n(a[0],a[1]),i=n(s[0],s[1]),l=n(o[0],o[1]);let g=e.hslToRgb([h,i,l]);return e.rgbToHex(g)}get hex(){return this.#t}set hex(t){this.#t=e.sanitizeHex(t),this.#e=e.hexToRgb(this.#t),this.#r=e.rgbToHsl(this.#e),this.#a=e.hslToHsv(this.#r)}get rgb(){return this.#e}get rgbString(){return"rgb("+this.#e.join(", ")+")"}get hsl(){return this.#r}get hslString(){let t=this.#r;return`hsl(${t[0]}deg, ${t[1]}%, ${t[2]}%)`}get hsv(){return this.#a}get hsvString(){let t=this.#a;return`hsv(${t[0]}deg, ${t[1]}%, ${t[2]}%)`}get red(){return this.#e[0]}get green(){return this.#e[1]}get blue(){return this.#e[2]}get hue(){return this.#r[0]}get saturation(){return this.#r[1]}get lightness(){return this.#r[2]}get luminance(){return e.getLuminance(this.hex)}get splitComplementary(){return this.getSplitComplementaryColors()}get complementary(){return this.getComplementaryColor()}get inverse(){return this.getInverseColor()}static get aHex(){return e.getRandomHexColor()}static get aPastel(){return e.getRandomPastelColor()}static get reddish(){return e.getRandomPreferredColor("reddish")}static get bluish(){return e.getRandomPreferredColor("bluish")}static get greenish(){return e.getRandomPreferredColor("greenish")}get analogous(){return this.getAnalogousColors()}get monochromatic(){return this.getMonochromaticColors()}get triad(){return this.getTriadColors()}get square(){return this.getSquareColors()}get rectangle(){return this.getRectangleColors()}}function r(t,e,r){return t>=e&&t<=r}function a(t){if(3!=t.length&&4!=t.length)throw new Error("Input array needs 3 or 4 elements!");let e=0;for(let a of t){if(e<3){if(!Number.isInteger(a))throw new Error("At least one RGB value is not a number!");if(!r(a,0,255))throw new Error("At least one RGB value is not in valid range!")}else{if(isNaN(Number(a)))throw new Error(`The alpha value ${a} is not a number!`);if(!r(a,0,1))throw new Error("The alpha value is out of range!")}e+=1}}function s(t){if(3!=t.length&&4!=t.length)throw new Error("Input array needs 3 or 4 elements!");if(!r(t[0],0,359))throw new Error("Hue is out of range!");if(!r(t[1],0,100))throw new Error("Saturation is out of range!");if(!r(t[2],0,100))throw new Error("Lightness is out of range!");if(4==t.length&&!r(t[3],0,1))throw new Error("The HSL opacity is out of range!")}return t.Colorful=e,t}({});
